# Default values for ca.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: "ica-provider"
fullnameOverride: ""


replicaCount: 1

image:
  repository: hyperledger/fabric-ca
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.5.6"

init:
  image:
   repository: 836713645333.dkr.ecr.us-east-2.amazonaws.com/hlf-builder
   pullPolicy: Always
   tag: "2.5"

# tls_domain : This will be used to create an Ingress, and CSR for the CA server.
# Eg: cvs-dev.net, then the Ingress object will be created as a combination of ".fabric-ca.fullname + .Values.tls_domain"
# ie, root-ca.cvs-dev.net
tls_domain: cvs-dev.net
ca_server:
  csr_names_country: IN
  csr_names_st: Telangana
  csr_names_l: Hyderabad
  csr_names_o: vivvenns co
  csr_names_ou: cvs
  container_port: 7051
  debug: true
  tls_enabled: true
  # You must create this secret outside of this chart for maximum security. Don't commit CA user/pass into any charts.
  # kubectl -n orderer create secret generic your-secret --from-literal=user=your-admin-user --from-literal=password=your-admin-password
  admin_secret: provider-secret

other_csr_names: 
  namespace : provider

ica:
  enabled: true
  parent_ca_endpoint: "root-ca.orderer.svc:7051" # your-root-ca-endpoint:<port>
  intermediate_tls_cert_dir: /tmp/hyperledger/fabric-ca/root-ca-cert
  intermediate_tls_cert_file: cert.pem

retry_seconds: 60

service:
  type: ClusterIP
  port: 7051

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  hosts:
    - paths:
        - path: /
          pathType: Prefix

storage:
  pvc_enabled: true
  accessMode: ReadWriteOnce
  storageClass: ebs-sc
  size: 1G
  path: /tmp/hyperledger/fabric-ca/crypto

serviceAccount:
  create: true
  annotations: {}
  name: ""

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# affinity:
#  nodeAffinity:
#   preferredDuringSchedulingIgnoredDuringExecution:
#   - weight: 50
#     preference:
#       matchExpressions:
#       - key: project
#         operator: In
#         values:
#         - value1

startupProbe:
  httpGet:
    path: /cainfo
    port: http
    scheme: HTTPS
  initialDelaySeconds: 10
livenessProbe:
  httpGet:
    path: /cainfo
    port: http
    scheme: HTTPS
readinessProbe:
  httpGet:
    path: /cainfo
    port: http
    scheme: HTTPS

podAnnotations: {}
podSecurityContext: {}
securityContext: {}
nodeSelector: {}
tolerations: []
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
