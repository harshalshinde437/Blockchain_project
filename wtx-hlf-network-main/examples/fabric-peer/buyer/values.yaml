# ==========================================================================================================
# Default values for fabric-peer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "buyer"
fullnameOverride: ""
project: wtx

imagePullSecrets: []

csr_names_cn: IN
csr_names_st: Gujrat
csr_names_l: Ahmdabad
csr_names_o: worldtradeX

init:
  image:
   repository: npcioss/hlf-builder
   tag: 2.4

ica_tls_cert_file: /root/ica-cert.pem
tlsca_tls_cert_file: /root/tlsca-cert.pem
fabric_base_dir: /etc/hyperledger/fabric
enroll_on_every_pod_recreation: true
renew_peer_certs: false
retry_seconds: 60

peers:
  - name: peer0
    identity_name: peer0-buyer
    identity_secret: peer0buyerSamplePassword
  - name: peer1
    identity_name: peer1-buyer
    identity_secret: peer1buyerSamplePassword
  # - name: peer2
  #   identity_name: peer2-buyer
  #   identity_secret: peer2buyerSamplePassword
global:  
  hlf_domain: localho.st
  k8s_hlf_domain: buyer.svc
  ica_endpoint: ica-buyer.buyer.svc:7051
  tlsca_endpoint: tls-ca.orderer.svc:7051
  storageClass: standard
  ingressClass: nginx
  ingressPort: 30000
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  imageRegistry: hyperledger
  imagePullPolicy: Always
  serviceAccount:
    annotations: []

  ## Configuration for the Operations Service: https://hyperledger-fabric.readthedocs.io/en/latest/operations_service.html
  operations:
    serviceName: operations
    serviceType: ClusterIP
    servicePort: 9443

  metrics:
    ## Select metrics provider. Possible values are "prometheus", "statsd" or "disabled"
    provider: disabled

    ## Only applicable if provider is "prometheus"
    ## A serviceMonitor will be created for each peer with the configuration provided below
    serviceMonitor:
      enabled: true
      additionalLabels: {}
      namespace: ""

      ## This should be equal to the operations port name
      portName: operations
      scrapeInterval: 30s
      honorLabels: true
      relabelings: []
      metricRelabelings: []

      ## Default: scrape .Release.Namespace only
      ## To scrape all, use the following:
      ## namespaceSelector:
      ##   any: true
      namespaceSelector:
        any: true
      targetLabels: []
    
    ## Configuration for statsd provider
    ## Statsd prefix will be the peer identity name
    statsd:
      network: udp
      address: 127.0.0.1:8125
      writeInterval: 10s

  useCouchDB: true
  couchImageRegistry: docker.io
  couchImageRepo: couchdb
  couchImageTag: 3.1.1
  couchContainerPort: "5984"
  couchServiceType: ClusterIP
  couchServicePort: "5984"
  couchDataDir: /opt/couchdb/data
  couchDiskSize: 1G
  couchDbUser: "couchDbSampleUser"
  couchDbUserPass: couchDbSampleUserPassword
  couchPvcAccessMode: ReadWriteOnce
  couchSecurityContext: {}
  couchResources: {}
  #couchStartupProbe: {}
  couchLivenessProbe:
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    tcpSocket:
      port: 5984
  couchReadinessProbe:
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    tcpSocket:
      port: 5984
  
  peerImageRegistry: docker.io
  peerImageRepo: hyperledger/fabric-peer
  peerImageTag: 2.5
  peerContainerPort: "7051"
  peerDataDir: /var/hyperledger/production
  peerServiceType: ClusterIP
  peerServicePort: "30000"
  peerDiskSize: 1G
  peerCertDiskSize: 50M
  peerPvcAccessMode: ReadWriteOnce
  peerSecurityContext: {}
  peerArgs:
    - peer
    - node
    - start
  core_peer_gossip_bootstrap: peer0-buyer.buyer.svc:30000
  core_ledger_state_couchdbconfig_requesttimeout: "180s"
  core_ledger_state_couchdbconfig_maxretries: "5"
  core_ledger_state_couchdbconfig_maxupdatebatchsize: "5000"
  core_ledger_state_couchdbconfig_internalquerylimit: "5000"
  core_ledger_state_couchdbconfig_totalquerylimit: "5000"
  core_ledger_state_couchdbconfig_couchdbaddress: "localhost:5984"
  peerResources: {}
  #peerStartupProbe: {}
  # peerLivenessProbe:
  #   failureThreshold: 3
  #   httpGet:
  #     path: /healthz
  #     port: 9443
  #     scheme: HTTP
  #   periodSeconds: 10
  #   successThreshold: 1
  # peerReadinessProbe:
  #   failureThreshold: 3
  #   httpGet:
  #     path: /healthz
  #     port: 9443
  #     scheme: HTTP
  #   periodSeconds: 10
  #   successThreshold: 1

  dindImageRegistry: docker.io
  dindImageRepo: npcioss/dind
  dindImageTag: dind-20-10-16
  dindDataDir: /var/lib/docker
  dindDiskSize: 5G
  dindPvcAccessMode: ReadWriteOnce
  dindDocker_tls_certdir: ""
  dindResources: {}
  dindSecurityContext:
    privileged: true
  #dindStartupProbe: {}
  dindLivenessProbe:
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    tcpSocket:
      port: 2375
  dindReadinessProbe:
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    tcpSocket:
      port: 2375

additonalEnvironmentVars:
  # couchDb:
  #   - name: EXTRA_ENV_COUCHDB
  #     value: Extra_couch_env_value
  # dind:
  #   - name: EXTRA_ENV_DIND
  #     value: Extra_dind_env_value
  peer:
    - name: CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE
      value: "false"
    - name: CORE_PEER_GOSSIP_MAXBLOCKCOUNTTOSTORE
      value: "20"
    - name: CORE_PEER_GOSSIP_MAXPROPAGATIONBURSTSIZE
      value: "20"
    - name: FABRIC_LOGGING_SPEC
      value: INFO
    - name: CORE_PEER_GOSSIP_USELEADERELECTION
      value: "false"
    - name: CORE_PEER_GOSSIP_ORGLEADER
      value: "true"
    - name: CORE_PEER_PROFILE_ENABLED
      value: "true"
    - name: CORE_PEER_TLS_ENABLED
      value: "true"
    # - name: CORE_VM_ENDPOINT
    #   value: http://localhost:2375
    # - name: DOCKER_HOST
    #   value: tcp://localhost:2375
    # - name: CORE_OPERATIONS_LISTENADDRESS
    #   value: 0.0.0.0:9443
